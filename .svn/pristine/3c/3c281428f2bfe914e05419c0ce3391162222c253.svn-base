package kr.or.ddit.view.login;

import java.net.URL;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.ResourceBundle;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Session;
import javax.mail.internet.PreencodedMimeBodyPart;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.stage.Stage;
import kr.or.ddit.api.Sendmail;
import kr.or.ddit.service.ILogin.ILoginService;
import kr.or.ddit.vo.ComVO;
import kr.or.ddit.vo.MemberVO;

public class SearchPWController implements Initializable {

	@FXML
	TextField id;
	@FXML
	TextField name;
	@FXML
	TextField tel;
	@FXML
	Button okBtn;
	@FXML
	Button cancelBtn;

	private Registry reg;
	private ILoginService ilogin;

	List<MemberVO> memlist = new ArrayList<MemberVO>();
	List<ComVO> comlist = new ArrayList<ComVO>();
	private MemberVO mvo = new MemberVO();
	private ComVO cvo = new ComVO();
	String user = null;
	
	@Override
	public void initialize(URL location, ResourceBundle resources) {

		try {
			reg = LocateRegistry.getRegistry("localhost", 8888);
			ilogin = (ILoginService) reg.lookup("LoginUser");
		} catch (RemoteException e) {
			e.printStackTrace();
		} catch (NotBoundException e) {
			e.printStackTrace();
		}

		okBtn.setOnAction(e -> {

			/*if (id.getText().isEmpty() || name.getAccessibleText().isEmpty() || tel.getText().isEmpty()) {
				errMsg("비밀번호 찾기 에러!", "입력하지 않은 정보가 있습니다");
				return;
			}*/

			String mem_id = id.getText();
			String mem_name = name.getText();
			String mem_tel = tel.getText();

			ArrayList<MemberVO> mList = new ArrayList<>();

			MemberVO mvo = new MemberVO();
			mvo.setMem_id(mem_id);
			mvo.setMem_name(mem_name);
			mvo.setMem_tel(mem_tel);

			String memEmail = mList.get(0).getMem_email().trim();
			try {
				mList = (ArrayList<MemberVO>) ilogin.pwSearch(mvo);
				
			} catch (RemoteException e1) {
				e1.printStackTrace();
			}

			if (mList.size() > 0) {

				/*String host = "smtp.naver.com";
				final String user = "s2555228@naver.com";
				final String password = "youliana12!@";*/

				
				infoMsg("비밀번호 찾기 성공", "귀하의 비밀번호는");
				Stage sta = (Stage) okBtn.getScene().getWindow();
				sta.close();

				Sendmail mail = new Sendmail();
				mail.setrecipient(memEmail);
				mail.setsubject(name.getText()+ "님의 비밀번호 찾기가 성공했습니다.");
				mail.setbody(mList.get(0).getMem_name() + "님의 비밀번호를 알려드립니다" + "\r\n" + " 님의 비밀번호는 " + mList.get(0).getMem_pw() + "입니다"
						+ "\r\n" + "\r\n" + "잊지 마시고 꼭 입력 하세요");
				

				try {
					mail.Send();
					
				} catch (MessagingException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
				System.out.println("비밀번호 발송 완료");
				
				
			}
			errMsg("에러", "입력하신 정보와 일치하는 아이디,비밀번호는 없습니다.");
			
		});
		
		
		
		cancelBtn.setOnAction(e->{
			try {	
			Parent change = FXMLLoader.load(getClass().getResource("Login_all.fxml"));
            Scene scene = new Scene(change);
            Stage primaryStage = (Stage)cancelBtn.getScene().getWindow();
            primaryStage.setScene(scene);
         }catch (Exception i) {
            i.printStackTrace();
         }
			
			
			
		});
		
		

	}

	private void errMsg(String headerText, String msg) {
		Alert errAlert = new Alert(AlertType.ERROR);
		errAlert.setTitle("오류");
		errAlert.setHeaderText(headerText);
		errAlert.setContentText(msg);
		errAlert.showAndWait();
	}

	private void infoMsg(String headerText, String msg) {
		Alert errAlert = new Alert(AlertType.INFORMATION);
		errAlert.setTitle("MelonPlate Id 찾기");
		errAlert.setHeaderText(headerText);
		errAlert.setContentText(msg);
		errAlert.showAndWait();
	}
	
	
	

}
